#!/bin/bash

highest_seqno=-1

###update these
username="root"
sshport="22"
mysqlogfile="/var/log/mysql/mysql.log"

# https://severalnines.com/blog/updated-how-bootstrap-mysql-or-mariadb-galera-cluster/
# this is for galera with mariadb
bootstrapcmd="/usr/bin/galera_new_cluster"

###update these

# Exit if specified config file doesnt contain wsrep_cluster_address directive
if [[ `cat $1 | grep -c wsrep_cluster_address` -lt 1 ]]
then
	{ echo "$1 doesn't contain wsrep_cluster_address directive."; exit 1; }
fi

cluster_string=`cat "$1" | grep wsrep_cluster_address | awk -F '//' '{print $2}' | awk -F '"' '{print $1}'`

IFS=',' read -r -a hosts <<< $cluster_string

# Wait for all host to be alive
for host in ${hosts[*]}
do
	while ! nc -vz $host $sshport
	do
		sleep 1
	done
done

# Traverse through all listed host
for host in ${hosts[*]}
do
		command="ssh -p $sshport $username@$host"

	# Get seqno value from grastate
	seqno=`$command grep seqno /var/lib/mysql/grastate.dat | awk -F ' ' '{print $2}'`

	if [[ $seqno -eq -1 ]]
	then
		# Check if server is running
		$command mysqladmin ping &> /dev/null
		if [ $? -eq 0 ]
		then
			bootstrap_host=$host
			break
		else
			# See seqno value from log
			### $command -wsrep-recover
			seqno_log=`$command cat $mysqlogfile | grep 'Found saved state' | tail -1 | awk -F ':' '{print $6}' | awk -F ',' '{print $1}'`
			if [[ $seqno_log -gt $highest_seqno ]]
			then
				highest_seqno=$seqno
				bootstrap_host=$host
			fi
		fi
	elif [[ $seqno -gt $highest_seqno ]]
	then
		highest_seqno=$seqno
		bootstrap_host=$host
	fi
done

# Is bootstrap host is this host?

bootstrap_host_ip=$(ping -c 2 $bootstrap_host| awk -F '[()]' '/PING/ { print $2}')

if [[ `ifconfig | grep -c $bootstrap_host_ip` -gt 0 ]]
then
	# Bootstrap the cluster
	echo "Running bootstrap command"
	sed -ie "/safe_to/c\safe_to_bootstrap:\ 1" /var/lib/mysql/grastate.dat
	$bootstrapcmd
else
	# Wait for bootstrap host
	echo "Waiting for bootstrap host: $bootstrap_host"

	while [[ `ssh -p $sshport $username@$host mysqladmin ping &> /dev/null` ]]
	do
		if [ $? -eq 0 ]
		then
			break
		fi
	done
fi
